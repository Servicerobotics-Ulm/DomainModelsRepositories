//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "DomainExternalSystems/CommProgramListACE.hh"
#include <ace/SString.h>
#include "DomainExternalSystems/CommExternalProgramACE.hh"

// serialization operator for element CommProgramList
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const DomainExternalSystemsIDL::CommProgramList &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element programs
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.programs.size());
	std::vector<DomainExternalSystemsIDL::CommExternalProgram>::const_iterator data_programsIt;
	for(data_programsIt=data.programs.begin(); data_programsIt!=data.programs.end(); data_programsIt++) {
		good_bit = good_bit && cdr << *data_programsIt;
	}
	// serialize list-element isValid
	good_bit = good_bit && cdr.write_boolean(data.isValid);
	
	return good_bit;
}

// de-serialization operator for element CommProgramList
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, DomainExternalSystemsIDL::CommProgramList &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize list-type element programs
	ACE_CDR::ULong data_programsNbr;
	good_bit = good_bit && cdr >> data_programsNbr;
	data.programs.clear();
	DomainExternalSystemsIDL::CommExternalProgram data_programsItem;
	for(ACE_CDR::ULong i=0; i<data_programsNbr; ++i) {
		good_bit = good_bit && cdr >> data_programsItem;
		data.programs.push_back(data_programsItem);
	}
	// deserialize type element isValid
	good_bit = good_bit && cdr.read_boolean(data.isValid);
	
	return good_bit;
}

// serialization operator for CommunicationObject CommProgramList
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const DomainExternalSystems::CommProgramList &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommProgramList
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, DomainExternalSystems::CommProgramList &obj)
{
	return cdr >> obj.set();
}
