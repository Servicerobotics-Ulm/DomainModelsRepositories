//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "DomainVision/CommDisparityImage.hh"

using namespace DomainVision;

CommDisparityImage::CommDisparityImage()
:	CommDisparityImageCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
CommDisparityImage::CommDisparityImage(const DomainVision::CommVideoImage &image, const float &f, const float &t, const DomainVision::CommImageRegionOfInterest &valid_window, const float &min_disparity, const float &max_disparity, const float &delta_d)
:	CommDisparityImageCore() // base constructor sets default values as defined in the model
{
	setImage(image);
	setF(f);
	setT(t);
	setValid_window(valid_window);
	setMin_disparity(min_disparity);
	setMax_disparity(max_disparity);
	setDelta_d(delta_d);
}
 */

CommDisparityImage::CommDisparityImage(const CommDisparityImageCore &commDisparityImage)
:	CommDisparityImageCore(commDisparityImage)
{  }

CommDisparityImage::CommDisparityImage(const DATATYPE &commDisparityImage)
:	CommDisparityImageCore(commDisparityImage)
{  }

CommDisparityImage::~CommDisparityImage()
{  }
