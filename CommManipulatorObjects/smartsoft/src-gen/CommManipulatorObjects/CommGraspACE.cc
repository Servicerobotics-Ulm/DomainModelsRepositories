//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommManipulatorObjects/CommGraspACE.hh"
#include <ace/SString.h>
#include "CommBasicObjects/CommPose3dACE.hh"

// serialization operator for element CommGrasp
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommManipulatorObjectsIDL::CommGrasp &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element id
	good_bit = good_bit && cdr << ACE_CString(data.id.c_str());
	// serialize list-element pose
	good_bit = good_bit && cdr << data.pose;
	// serialize list-element quality
	good_bit = good_bit && cdr.write_double(data.quality);
	// serialize list-element width
	good_bit = good_bit && cdr.write_double(data.width);
	
	return good_bit;
}

// de-serialization operator for element CommGrasp
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommManipulatorObjectsIDL::CommGrasp &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize string-type element id
	ACE_CString data_id_str;
	good_bit = good_bit && cdr >> data_id_str;
	data.id = data_id_str.c_str();
	// deserialize type element pose
	good_bit = good_bit && cdr >> data.pose;
	// deserialize type element quality
	good_bit = good_bit && cdr.read_double(data.quality);
	// deserialize type element width
	good_bit = good_bit && cdr.read_double(data.width);
	
	return good_bit;
}

// serialization operator for CommunicationObject CommGrasp
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommManipulatorObjects::CommGrasp &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommGrasp
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommManipulatorObjects::CommGrasp &obj)
{
	return cdr >> obj.set();
}
