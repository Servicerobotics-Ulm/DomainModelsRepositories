//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommManipulatorObjects/CommMobileManipulatorProgramsACE.hh"
#include <ace/SString.h>

// serialization operator for element CommMobileManipulatorPrograms
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommManipulatorObjectsIDL::CommMobileManipulatorPrograms &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element names
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.names.size());
	std::vector<std::string>::const_iterator data_namesIt;
	for(data_namesIt=data.names.begin(); data_namesIt!=data.names.end(); data_namesIt++) {
		good_bit = good_bit && cdr << ACE_CString(data_namesIt->c_str());
	}
	// serialize list-element isValid
	good_bit = good_bit && cdr.write_boolean(data.isValid);
	
	return good_bit;
}

// de-serialization operator for element CommMobileManipulatorPrograms
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommManipulatorObjectsIDL::CommMobileManipulatorPrograms &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize list-type element names
	ACE_CDR::ULong data_namesNbr;
	good_bit = good_bit && cdr >> data_namesNbr;
	data.names.clear();
	ACE_CString data_namesItem;
	for(ACE_CDR::ULong i=0; i<data_namesNbr; ++i) {
		good_bit = good_bit && cdr >> data_namesItem;
		data.names.push_back(data_namesItem.c_str());
	}
	// deserialize type element isValid
	good_bit = good_bit && cdr.read_boolean(data.isValid);
	
	return good_bit;
}

// serialization operator for CommunicationObject CommMobileManipulatorPrograms
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommManipulatorObjects::CommMobileManipulatorPrograms &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommMobileManipulatorPrograms
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommManipulatorObjects::CommMobileManipulatorPrograms &obj)
{
	return cdr >> obj.set();
}
