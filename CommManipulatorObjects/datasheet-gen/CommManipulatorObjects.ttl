# baseURI: http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects
# imports: http://robmosys.eu/rdf/composition-structures
# imports: http://seronet-projekt.de/models/t2#Navigation

#######################################
# Technical Data Sheet
# for a SeRoNet DomainModels Repository as 
# exported by the SmartMDSD Toolchain
#
# <domainModelsName>/datasheet-gen/<domainModelsName>.ttl
#######################################

# all generated files use these prefixes
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix t1: <http://seronet-projekt.de/models/t1#> .
@prefix spdx: <http://spdx.org/rdf/terms#> .
@prefix spdx-lic: <http://spdx.org/licenses/> .

@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# TODO past “Durchstich”: exactly identify which elements belong to SeRoNet and which belong to RobMoSys
@prefix robmosys: <http://robmosys.eu/rdf/composition-structures#> .

# these namespaces can be different in generated files
@prefix : <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects#> .

##### Domain Model Repository
# ... they resemble eclipse projects in the tooling
# Note: this will later not be provided by the software component
<http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>
	a robmosys:DomainModelRepository;
	rdf:type owl:Ontology ;
	owl:imports <http://robmosys.eu/rdf/composition-structures> ;
.

##### Communication Objects
# see https://robmosys.eu/wiki/modeling:metamodels:commobject 
# Note: this will later not be provided by the software component
:CommCartesianManipulationTarget a robmosys:CommunicationObject;
	rdfs:label "CommCartesianManipulationTarget";
	t1:shortDescription "CommunicationObject CommCartesianManipulationTarget";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommGrasp a robmosys:CommunicationObject;
	rdfs:label "CommGrasp";
	t1:shortDescription "CommunicationObject CommGrasp";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommGripperEvent a robmosys:CommunicationObject;
	rdfs:label "CommGripperEvent";
	t1:shortDescription "CommunicationObject CommGripperEvent";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommGripperEventParameter a robmosys:CommunicationObject;
	rdfs:label "CommGripperEventParameter";
	t1:shortDescription "CommunicationObject CommGripperEventParameter";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommGripperState a robmosys:CommunicationObject;
	rdfs:label "CommGripperState";
	t1:shortDescription "CommunicationObject CommGripperState";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommGripperTrajectory a robmosys:CommunicationObject;
	rdfs:label "CommGripperTrajectory";
	t1:shortDescription "CommunicationObject CommGripperTrajectory";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommInverseKinematicsRequest a robmosys:CommunicationObject;
	rdfs:label "CommInverseKinematicsRequest";
	t1:shortDescription "CommunicationObject CommInverseKinematicsRequest";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommInverseKinematicsResponse a robmosys:CommunicationObject;
	rdfs:label "CommInverseKinematicsResponse";
	t1:shortDescription "CommunicationObject CommInverseKinematicsResponse";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommJointManipulationTarget a robmosys:CommunicationObject;
	rdfs:label "CommJointManipulationTarget";
	t1:shortDescription "CommunicationObject CommJointManipulationTarget";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommJointValues a robmosys:CommunicationObject;
	rdfs:label "CommJointValues";
	t1:shortDescription "CommunicationObject CommJointValues";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommManipulationTrajectory a robmosys:CommunicationObject;
	rdfs:label "CommManipulationTrajectory";
	t1:shortDescription "CommunicationObject CommManipulationTrajectory";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommManipulatorEventParameter a robmosys:CommunicationObject;
	rdfs:label "CommManipulatorEventParameter";
	t1:shortDescription "CommunicationObject CommManipulatorEventParameter";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommManipulatorEventResult a robmosys:CommunicationObject;
	rdfs:label "CommManipulatorEventResult";
	t1:shortDescription "CommunicationObject CommManipulatorEventResult";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommManipulatorEventState a robmosys:CommunicationObject;
	rdfs:label "CommManipulatorEventState";
	t1:shortDescription "CommunicationObject CommManipulatorEventState";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommManipulatorId a robmosys:CommunicationObject;
	rdfs:label "CommManipulatorId";
	t1:shortDescription "CommunicationObject CommManipulatorId";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommManipulatorRequestScan3d a robmosys:CommunicationObject;
	rdfs:label "CommManipulatorRequestScan3d";
	t1:shortDescription "CommunicationObject CommManipulatorRequestScan3d";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommManipulatorState a robmosys:CommunicationObject;
	rdfs:label "CommManipulatorState";
	t1:shortDescription "CommunicationObject CommManipulatorState";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommManipulatorTrajectory a robmosys:CommunicationObject;
	rdfs:label "CommManipulatorTrajectory";
	t1:shortDescription "CommunicationObject CommManipulatorTrajectory";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommMobileManipulatorPrograms a robmosys:CommunicationObject;
	rdfs:label "CommMobileManipulatorPrograms";
	t1:shortDescription "CommunicationObject CommMobileManipulatorPrograms";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommMobileManipulatorState a robmosys:CommunicationObject;
	rdfs:label "CommMobileManipulatorState";
	t1:shortDescription "CommunicationObject CommMobileManipulatorState";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommScanEventState a robmosys:CommunicationObject;
	rdfs:label "CommScanEventState";
	t1:shortDescription "CommunicationObject CommScanEventState";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommVacummGripperState a robmosys:CommunicationObject;
	rdfs:label "CommVacummGripperState";
	t1:shortDescription "CommunicationObject CommVacummGripperState";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommVacuumGripperEventParameter a robmosys:CommunicationObject;
	rdfs:label "CommVacuumGripperEventParameter";
	t1:shortDescription "CommunicationObject CommVacuumGripperEventParameter";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommVacuumGripperEventResult a robmosys:CommunicationObject;
	rdfs:label "CommVacuumGripperEventResult";
	t1:shortDescription "CommunicationObject CommVacuumGripperEventResult";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.

:CommVacuumGripperEventState a robmosys:CommunicationObject;
	rdfs:label "CommVacuumGripperEventState";
	t1:shortDescription "CommunicationObject CommVacuumGripperEventState";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
.


##### Service Definitions
# see https://robmosys.eu/wiki/modeling:metamodels:service 
# see https://robmosys.eu/wiki/modeling:metamodels:commpattern 
# Note: this will later not be provided by the software component
:GripperEventService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "GripperEventService";
	t1:shortDescription "ServiceDefinition GripperEventService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:EventPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:eventType :CommManipulatorEventResult;
		t1:activationType :CommManipulatorEventParameter;
		t1:eventStateType :CommManipulatorEventState;
	];
.

:GripperStateQueryService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "GripperStateQueryService";
	t1:shortDescription "ServiceDefinition GripperStateQueryService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:QueryPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:requestType :CommVoid;
		t1:answerType :CommGripperState;
	];
.

:GripperStateService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "GripperStateService";
	t1:shortDescription "ServiceDefinition GripperStateService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:PushPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:dataType :CommGripperState;
	];
.

:InverseKinematicsQuery a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "InverseKinematicsQuery";
	t1:shortDescription "ServiceDefinition InverseKinematicsQuery";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:QueryPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:requestType :CommInverseKinematicsRequest;
		t1:answerType :CommInverseKinematicsResponse;
	];
.

:ManipulationTrajectoryService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "ManipulationTrajectoryService";
	t1:shortDescription "ServiceDefinition ManipulationTrajectoryService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:SendPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:dataType :CommManipulationTrajectory;
	];
.

:ManipulatorEventService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "ManipulatorEventService";
	t1:shortDescription "ServiceDefinition ManipulatorEventService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:EventPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:eventType :CommManipulatorEventResult;
		t1:activationType :CommManipulatorEventParameter;
		t1:eventStateType :CommManipulatorEventState;
	];
.

:MobileManipulatorProgramQueryService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "MobileManipulatorProgramQueryService";
	t1:shortDescription "ServiceDefinition MobileManipulatorProgramQueryService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:QueryPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:requestType :CommVoid;
		t1:answerType :CommMobileManipulatorPrograms;
	];
.

:MobileManipulatorStateQueryService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "MobileManipulatorStateQueryService";
	t1:shortDescription "ServiceDefinition MobileManipulatorStateQueryService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:QueryPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:requestType :CommVoid;
		t1:answerType :CommMobileManipulatorState;
	];
.

:MobileManipulatorStateService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "MobileManipulatorStateService";
	t1:shortDescription "ServiceDefinition MobileManipulatorStateService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:PushPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:dataType :CommMobileManipulatorState;
	];
.

:Scan3dEventService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "Scan3dEventService";
	t1:shortDescription "ServiceDefinition Scan3dEventService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:EventPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:eventType :CommManipulatorId;
		t1:activationType :CommVoid;
		t1:eventStateType :CommScanEventState;
	];
.

:SendManipulatorRequestScan3dService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "SendManipulatorRequestScan3dService";
	t1:shortDescription "ServiceDefinition SendManipulatorRequestScan3dService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:SendPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:dataType :CommManipulatorRequestScan3d;
	];
.

:SendTrajectoryService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "SendTrajectoryService";
	t1:shortDescription "ServiceDefinition SendTrajectoryService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:SendPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:dataType :CommManipulatorTrajectory;
	];
.

:VacuumGripperEventService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "VacuumGripperEventService";
	t1:shortDescription "ServiceDefinition VacuumGripperEventService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:EventPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:eventType :CommVacuumGripperEventResult;
		t1:activationType :CommVacuumGripperEventParameter;
		t1:eventStateType :CommVacuumGripperEventState;
	];
.

:VacuumGripperStateService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "VacuumGripperStateService";
	t1:shortDescription "ServiceDefinition VacuumGripperStateService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/CommManipulatorObjects>;
	t1:commPatternUsage [
		a robmosys:QueryPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:requestType :CommVoid;
		t1:answerType :CommVacummGripperState;
	];
.

