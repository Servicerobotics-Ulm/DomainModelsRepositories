ServiceDefRepository CommManipulatorObjects version 1.0 {
	
	RequestAnswerServiceDefinition InverseKinematicsQuery {
		QueryPattern < RequestType=CommManipulatorObjects.CommInverseKinematicsRequest AnswerType=CommManipulatorObjects.CommInverseKinematicsResponse>
	}
	
	JoiningServiceDefinition ManipulationTrajectoryService {
		SendPattern <DataType=CommManipulatorObjects.CommManipulationTrajectory>
	}
	
	JoiningServiceDefinition SendManipulatorRequestScan3dService {
		SendPattern < DataType=CommManipulatorObjects.CommManipulatorRequestScan3d>
	}
	
	ForkingServiceDefinition ManipulatorEventService {
		EventPattern <
			ActivationType=CommManipulatorObjects.CommManipulatorEventParameter 
			EventType=CommManipulatorObjects.CommManipulatorEventResult 
			EventStateType=CommManipulatorObjects.CommManipulatorEventState
		>
	}
	
	ForkingServiceDefinition Scan3dEventService {
		EventPattern <
			ActivationType = CommBasicObjects.CommVoid
			EventType = CommManipulatorObjects.CommManipulatorId
			EventStateType = CommManipulatorObjects.CommScanEventState
		>
	}
	
	ForkingServiceDefinition MobileManipulatorStateService {
		PushPattern<DataType=CommManipulatorObjects.CommMobileManipulatorState>
	}
	
	RequestAnswerServiceDefinition MobileManipulatorStateQueryService {
		QueryPattern <
			RequestType = CommBasicObjects.CommVoid
			AnswerType = CommManipulatorObjects.CommMobileManipulatorState
		>
	}
	
	RequestAnswerServiceDefinition MobileManipulatorProgramQueryService {
		QueryPattern <
			RequestType = CommBasicObjects.CommVoid
			AnswerType = CommManipulatorObjects.CommMobileManipulatorPrograms
		>
	}
	
	ForkingServiceDefinition GripperStateService {
		PushPattern<DataType=CommManipulatorObjects.CommGripperState>
	}
	
	RequestAnswerServiceDefinition GripperStateQueryService {
		QueryPattern <
			RequestType = CommBasicObjects.CommVoid
			AnswerType = CommManipulatorObjects.CommGripperState
		>
	}
	
	ForkingServiceDefinition GripperEventService {
		EventPattern < 
			ActivationType=CommManipulatorObjects.CommManipulatorEventParameter
			EventType=CommManipulatorObjects.CommManipulatorEventResult
			EventStateType=CommManipulatorObjects.CommManipulatorEventState
		> 
	}
	
	CoordinationServiceDefinition ManipulationCoordinationService {
		ParameterPattern < CommManipulatorObjects.ManipulatorParameter >
		StatePattern < lifecycle ComponentLifecycle with CommManipulatorObjects.ManipulatorModes >
		CommunicationServiceUsage manipulatorevent uses ManipulatorEventService
		CommunicationServiceUsage manipulatorstate uses MobileManipulatorStateQueryService
		CommunicationServiceUsage manipulatorprograms uses MobileManipulatorProgramQueryService
		CommunicationServiceUsage ioquery uses CommBasicObjects.CommIOValuesQueryService
		CommunicationServiceUsage ioevent uses CommBasicObjects.CommDigitalInputEvent
		CommunicationServiceUsage trajectory uses ManipulationTrajectoryService
	}
	
	CoordinationServiceDefinition WelderCoordinationService {
		ParameterPattern < CommManipulatorObjects.WelderParameter >
		StatePattern < lifecycle ComponentLifecycle with CommBasicObjects.BasicModes >
	}


	// vacuum gripper services
	
	ForkingServiceDefinition VacuumGripperEventService {
		EventPattern < ActivationType=CommManipulatorObjects.CommVacuumGripperEventParameter
					   EventStateType=CommManipulatorObjects.CommVacuumGripperEventState
					   EventType=CommManipulatorObjects.CommVacuumGripperEventResult>
	}
	
	RequestAnswerServiceDefinition VacuumGripperStateService {
		QueryPattern < RequestType = CommBasicObjects.CommVoid
		AnswerType =  CommManipulatorObjects.CommVacummGripperState >
	}
	
	CoordinationServiceDefinition VacuumGripperCoordinationService {
		ParameterPattern < CommManipulatorObjects.VacuumGripperParameter >
		StatePattern < lifecycle ComponentLifecycle with CommBasicObjects.BasicModes >
		CommunicationServiceUsage gripperevent uses VacuumGripperEventService
	}
	
	//DEPRECATED
	JoiningServiceDefinition SendTrajectoryService {
		SendPattern <DataType=CommManipulatorObjects.CommManipulatorTrajectory>
	}
	CoordinationServiceDefinition ManipulatorCoordinationService {
		ParameterPattern < CommManipulatorObjects.ManipulatorParameter >
		StatePattern < lifecycle ComponentLifecycle with CommManipulatorObjects.ManipulatorStates >
		CommunicationServiceUsage manipulatorevent uses ManipulatorEventService
		CommunicationServiceUsage manipulatorstate uses MobileManipulatorStateQueryService
		CommunicationServiceUsage manipulatorprograms uses MobileManipulatorProgramQueryService
		CommunicationServiceUsage ioquery uses CommBasicObjects.CommIOValuesQueryService
		CommunicationServiceUsage ioevent uses CommBasicObjects.CommDigitalInputEvent
		CommunicationServiceUsage trajectory uses SendTrajectoryService
	}
}
