//-----------------------------------------------------------------------------------
// Code generated by the Toolify Robotics GmbH extension for the SmartMDSD Toolchain 
// 
// Toolify Robotics GmbH
// Weinbergweg 216
// 89075 Ulm 
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//-----------------------------------------------------------------------------------

#include "CommPickDetectionRequestJSON.hh"


namespace CommObjectRecognitionObjectsIDL {

void to_json(const CommObjectRecognitionObjectsIDL::CommPickDetectionRequest& obj, nlohmann::json& j)
{
	// workspaceID: String
	j["workspaceID"] = obj.workspaceID;
	// pickmodelID: String
	j["pickmodelID"] = obj.pickmodelID;
}

/**
 * this transformation handles missing values and checks for correct types:
 * - missing primitive type values (including simple arrays) are set to zero values
 * - missing object type values are skipped entirely
 * - types are checked before performing the type-cast operation
 */
void from_json(const nlohmann::json& j, CommObjectRecognitionObjectsIDL::CommPickDetectionRequest& obj)
{
	// workspaceID: String
	if(j.contains("workspaceID") && j["workspaceID"].is_string()) {
		obj.workspaceID = j["workspaceID"].get<std::string>();
	}
	// pickmodelID: String
	if(j.contains("pickmodelID") && j["pickmodelID"].is_string()) {
		obj.pickmodelID = j["pickmodelID"].get<std::string>();
	}
}

} // end namespace CommObjectRecognitionObjectsIDL
