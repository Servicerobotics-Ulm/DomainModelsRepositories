//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

// --------------------------------------------------------------------------
//
//  Copyright (C) 2018 Servicerobotik Ulm
//
//  Service Robotics Research Center
//  University of Applied Sciences Ulm
//  Prittwitzstr. 10
//  89075 Ulm (Germany)
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------


#include "DomainPTU/CommMobilePTUState.hh"

using namespace DomainPTU;

CommMobilePTUState::CommMobilePTUState()
:	CommMobilePTUStateCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
CommMobilePTUState::CommMobilePTUState(const DomainPTU::CommPTUState &ptu_state, const CommBasicObjects::CommBaseState &base_state)
:	CommMobilePTUStateCore() // base constructor sets default values as defined in the model
{
	setPtu_state(ptu_state);
	setBase_state(base_state);
}
 */

CommMobilePTUState::CommMobilePTUState(const CommMobilePTUStateCore &commMobilePTUState)
:	CommMobilePTUStateCore(commMobilePTUState)
{  }

CommMobilePTUState::CommMobilePTUState(const DATATYPE &commMobilePTUState)
:	CommMobilePTUStateCore(commMobilePTUState)
{  }

CommMobilePTUState::~CommMobilePTUState()
{  }
void CommMobilePTUState::print(std::ostream &os) const {
	os << "CommMobilePTUState(" << ",baseState=" << get_base_state()
			<< ",ptuState=" << get_ptu_state() << ")";
}
