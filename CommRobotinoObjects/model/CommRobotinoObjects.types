// --------------------------------------------------------------------------
//
//  Copyright (C) 2013 Matthias Lutz
//
//        schlegel@hs-ulm.de
//
//        ZAFH Servicerobotik Ulm
//        University of Applied Sciences
//        Prittwitzstr. 10
//        D-89075 Ulm
//        Germany
//
//  This file is part of the "SmartSoft Communication Classes".
//  It provides basic standardized data types for communication between
//  different components in the mobile robotics context. These classes
//  are designed to be used in conjunction with the SmartSoft Communication
//  Library.
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------
#import CommBasicObjects.*;

CommObjectsRepository CommRobotinoObjects version 1.0.0 {
	
	Enumeration RobotinoDockingEventType 
	{
		DOCKING_UNKNOWN
		IR_DOCKING_DONE
		LASER_DOCKING_DONE
		IR_DOCKING_NOT_DONE
		LASER_DOCKING_NOT_DONE
		LASER_DOCKING_ERROR
		IR_DOCKING_ERROR
		UN_DOCKING_NOT_DONE
		UN_DOCKING_DONE
		UN_DOCKING_ERROR
	}
	
	Enumeration RobotinoConveyerBeltEventType 
	{
		CONVEYER_BELT_UNKNOWN
		CONVEYER_BELT_LOAD_DONE
		CONVEYER_BELT_UNLOAD_DONE
		CONVEYER_BELT_LOAD_NOT_DONE
		CONVEYER_BELT_UNLOAD_NOT_DONE
		CONVEYER_BELT_UNLOAD_ERROR_NO_BOX
		CONVEYER_BELT_UNLOAD_ERROR_BOX_STILL_PRESENT
		CONVEYER_BELT_UNLOAD_ERROR_NO_RESPONSE_FROM_STATION
		CONVEYER_BELT_LOAD_ERROR_NO_BOX_LOADED
		CONVEYER_BELT_LOAD_ERROR_BOX_ADREADY_PRSESENT
		CONVEYER_BELT_LOAD_ERROR_NO_RESPONSE_FROM_STATION
	}
	
	CommObject CommRobotinoDockingEventParameter {
		oldState : RobotinoDockingEventType
	}
	
	CommObject CommRobotinoDockingEventResult {
		state : RobotinoDockingEventType
	}
	
	
	CommObject RobotinoDockingEventState {
		newState : RobotinoDockingEventType
	}
	
	CommObject CommRobotinoConveyerBeltEventParameter {
		oldState : RobotinoConveyerBeltEventType
	}
	
	CommObject CommRobotinoConveyerBeltEventResult {
		state : RobotinoConveyerBeltEventType
	}
	
	CommObject RobotinoConveyerBeltEventState {
		newState : RobotinoConveyerBeltEventType
	}
	
	CommObject CommRobotinoPowerOutputValue {
		value : Float
	}
	
	CommObject JobEventState {
		robotTarget: String
		job: CommTCLMessage
	}
	

	// ///////////////////////////////////
	

	

	

	
	CommObject CommPathFreeArea{
		areaID : Int32
		maxOccupancy : Int32
		robotIDs : Int32 [*]
		nodeXvector : Double [*]
		nodeYvector : Double [*]
	}
	
	Enumeration CoordinatedNavigationResourceRequestActionType {
		UNKOWN
		FREE
		ACQUIRE
	}
	
	Enumeration CoordinatedNavigationResourceResponseActionType {
		UNKOWN
		SUCCESS
		FAILED
	}
	
	Enumeration CoordinatedNavigationResourceStateType {
		UNKOWN
		FREE
		BLOCKED
	}
	
	CommObject CommCoordinatedNavigationResourceRequest {
		resourceID :  Int32
		robotID : Int32
		actionType : CoordinatedNavigationResourceRequestActionType = UNKOWN
	}
	
	CommObject CommCoordinatedNavigationResourceState {
		resourceID : Int32
		robotID : Int32
		state : CoordinatedNavigationResourceStateType = UNKOWN 
		remainingCapacity : Int32 = 0
	}
	
	CommObject CommCoordinatedNavigationResourceResponse {
		resourceID :  Int32
		reservedSuccess : CoordinatedNavigationResourceResponseActionType = UNKOWN
		remainingCapacity : Int32 = 0
	}
	
	CommObject CommCoordinatedNavigationDataRequest {
		resourceID :  Int32
		
	}
	
	CommObject CommCoordinatedNavigationDataResponse{
		isValid : Boolean
		area : CommPathFreeArea
	}


	
	Enumeration RemoteOperatorEventType{
		SUCCESS
		FAILED
		INVOKE
	}
	
	CommObject CommRemoteOperatorEvent {
		state : RemoteOperatorEventType
	}
	
	CommObject CommLicenseKey {
		key : String
		valid : Boolean
		timestamp : CommTimeStamp
	}
	
}
