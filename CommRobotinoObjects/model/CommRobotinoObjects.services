// --------------------------------------------------------------------------
//
//  Copyright (C) 2018 Servicerobotik Ulm
//
//  Service Robotics Research Center
//  University of Applied Sciences Ulm
//  Prittwitzstr. 10
//  89075 Ulm (Germany)
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------

#import CommBasicObjects.*;
ServiceDefRepository CommRobotinoObjects version 1.0 
{
	/**
	 * Service for path-based navigation.
	 * A path is a virtual corridor a robot is allowed to navigate within.
	 */
	
	ForkingServiceDefinition RobotinoDockingEvent {
		EventPattern < 
			ActivationType 	= CommRobotinoObjects.CommRobotinoDockingEventParameter
			EventType 		= CommRobotinoObjects.CommRobotinoDockingEventResult
			EventStateType 	= CommRobotinoObjects.RobotinoDockingEventState 
		>
	}
	
	JoiningServiceDefinition CommPowerOutputSend {
		SendPattern < DataType = CommRobotinoObjects.CommRobotinoPowerOutputValue >
	}
	
	ForkingServiceDefinition RobotinoConveyerBeltEvent {
		EventPattern < 
			ActivationType 	= CommRobotinoObjects.CommRobotinoConveyerBeltEventParameter
			EventType 		= CommRobotinoObjects.CommRobotinoConveyerBeltEventResult
			EventStateType 	= CommRobotinoObjects.RobotinoConveyerBeltEventState 
		>
	}
	
	CoordinationServiceDefinition ConveyerBeltCoordinationService {
		ParameterPattern <CommRobotinoObjects.RobotinoConveyerParameter>
		StatePattern <lifecycle ComponentLifecycle with CommRobotinoObjects.ConveyerBeltModes>
		CommunicationServiceUsage loadevent uses RobotinoConveyerBeltEvent
	}

    CoordinationServiceDefinition FestoMPSDockingCoordinationService {
		StatePattern < lifecycle ComponentLifecycle with CommRobotinoObjects.FestoMpsDockingStates>
		ParameterPattern < CommRobotinoObjects.RobotinoDockingParameter>
		CommunicationServiceUsage dockingevent uses RobotinoDockingEvent		
	}
	
	CoordinationServiceDefinition FestoMPSVisualDockingCoordinationService {
		StatePattern < lifecycle ComponentLifecycle with CommRobotinoObjects.FestoMpsVisualDockingStates>
		ParameterPattern < CommRobotinoObjects.RobotinoDockingParameter>
		CommunicationServiceUsage dockingevent uses CommRobotinoObjects.RobotinoDockingEvent
	}
	
	CoordinationServiceDefinition RobotToRobotDockingCoordinationService {
		StatePattern < lifecycle ComponentLifecycle with CommRobotinoObjects.RobotToRobotDockingStates>
		ParameterPattern < CommRobotinoObjects.RobotToRobotDockingParameter>
		CommunicationServiceUsage r2rdockingevent uses CommRobotinoObjects.RobotinoDockingEvent		
	}

	CoordinationServiceDefinition MasterRPCBridgeCoordinationService {
		StatePattern < lifecycle ComponentLifecycle with CommRobotinoObjects.MasterRPCBridgeStates >
		ParameterPattern < CommRobotinoObjects.RobotinoRPCParameter >
	}
	
}
