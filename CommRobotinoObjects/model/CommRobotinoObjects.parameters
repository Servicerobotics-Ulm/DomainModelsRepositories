// --------------------------------------------------------------------------
//
//  Copyright (C) 2018 Servicerobotik Ulm
//
//  Service Robotics Research Center
//  University of Applied Sciences Ulm
//  Prittwitzstr. 10
//  89075 Ulm (Germany)
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------
ParameterSetRepository CommRobotinoObjects {
	ParameterSet RobotinoDockingParameter {
		Parameter BELT_ID { 
			beltId : Int32
		}
		Parameter NUM_BELTS { 
			numBelts : Int32
		}
		Parameter STATION_ID { 
			stationID : Int32
		}
		Trigger SAVE_BEFORE_DOCKING_POSE {}
		
		Parameter  min_station_width {
			min_station_width : Double
		}      
		
		Parameter  max_station_width {
			max_station_width : Double	           
       	} 
       	
  		Parameter  offs_bet_center_o_belts  {
  			offs_bet_center_o_belts : Double
  		}
  		
  		Parameter  offs_left_ref_to_1Belt_cent {
  			offs_left_ref_to_1Belt_cent :  Double
  		}
  		
  		Parameter  ir_dock_stop_dist_l2_min {
  			ir_dock_stop_dist_l2_min :  Double
  		}
  		 
		Parameter  ir_dock_stop_dist_l2_max {
			ir_dock_stop_dist_l2_max :  Double
		}
		 
		Parameter  ir_dock_stop_dist_l1  {
			ir_dock_stop_dist_l1 :  Double
		}
		 
		Parameter  ir_dock_center_sensor_zero {
			ir_dock_center_sensor_zero :  Double
		}
		
		Parameter max_reflector_dist {
			max_reflector_dist : Double
		}
		
		Parameter laser_dockstop_dist {
			laser_dock_stop_dist : Double
		}
	}
	
	ParameterSet RobotToRobotDockingParameter {
				
		Trigger SAVE_BEFORE_DOCKING_POSE {}
	}
	
	ParameterSet RobotinoRPCParameter {
		Trigger REFRESH_STATIC_MAP{
		}
		
		Parameter SET_MAPPING_ROBOT_ID{
			robotID : Int32
		}
		
		Trigger ADDROBOT {
			robotName : String
			baseComponentName : String
			baseServiceName : String
			baseriOQueryServerName: String
			laserComponentName:String
			laserServiceName:String
			pathNavClientComponentName:String
			pathNavClientServiceName:String
		}
		Trigger RMROBOT {
			robotName : String
		}
//		Trigger SET_LOCALIZATION_TYP {
//			@doc "NOT USED ANY MORE"
//			localizationType:Enum {
//				LOCALIZATION
//				SLAM
//			}
//			robotID : Int32
//		}	
	}

	
	ParameterSet MultiRobotResourceCoordinationParams {
		Trigger LOADRESOURCELIST {
			filename : String
		}
	}
	
	ParameterSet RemoteOperatorParams {
		Trigger ACTIVATE_REMOTE_OP{
			
		}
		
	}
	
	ParameterSet RobotinoConveyerParameter {
		Parameter SetStationID {
			id : Int16 = 0
		}
	}
}
