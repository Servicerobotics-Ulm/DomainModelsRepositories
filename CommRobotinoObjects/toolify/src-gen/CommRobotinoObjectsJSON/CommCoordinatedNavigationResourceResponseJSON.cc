//-----------------------------------------------------------------------------------
// Code generated by the Toolify Robotics GmbH extension for the SmartMDSD Toolchain 
// 
// Toolify Robotics GmbH
// Weinbergweg 216
// 89075 Ulm 
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//-----------------------------------------------------------------------------------

#include "CommCoordinatedNavigationResourceResponseJSON.hh"

#include <CommRobotinoObjects/enumCoordinatedNavigationResourceResponseActionType.hh>

namespace CommRobotinoObjectsIDL {

void to_json(const CommRobotinoObjectsIDL::CommCoordinatedNavigationResourceResponse& obj, nlohmann::json& j)
{
	// resourceID: Int32
	j["resourceID"] = obj.resourceID;
	// reservedSuccess: CoordinatedNavigationResourceResponseActionType
	j["reservedSuccess"] = CommRobotinoObjects::CoordinatedNavigationResourceResponseActionType(obj.reservedSuccess).to_string(false);
	// remainingCapacity: Int32
	j["remainingCapacity"] = obj.remainingCapacity;
}

/**
 * this transformation handles missing values and checks for correct types:
 * - missing primitive type values (including simple arrays) are set to zero values
 * - missing object type values are skipped entirely
 * - types are checked before performing the type-cast operation
 */
void from_json(const nlohmann::json& j, CommRobotinoObjectsIDL::CommCoordinatedNavigationResourceResponse& obj)
{
	// resourceID: Int32
	if(j.contains("resourceID") && j["resourceID"].is_number_integer()) {
		obj.resourceID = j["resourceID"].get<int>();
	}
	// reservedSuccess: CoordinatedNavigationResourceResponseActionType
	if(j.contains("reservedSuccess") && j["reservedSuccess"].is_string()) {
		obj.reservedSuccess = CommRobotinoObjects::CoordinatedNavigationResourceResponseActionType::from_string(j["reservedSuccess"].get<std::string>());
	}
	// remainingCapacity: Int32
	if(j.contains("remainingCapacity") && j["remainingCapacity"].is_number_integer()) {
		obj.remainingCapacity = j["remainingCapacity"].get<int>();
	}
}

} // end namespace CommRobotinoObjectsIDL
