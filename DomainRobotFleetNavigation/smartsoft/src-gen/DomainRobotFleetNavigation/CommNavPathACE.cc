//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "DomainRobotFleetNavigation/CommNavPathACE.hh"
#include <ace/SString.h>
#include "DomainRobotFleetNavigation/CommPathACE.hh"

// serialization operator for element CommNavPath
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const DomainRobotFleetNavigationIDL::CommNavPath &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element path
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.path.size());
	std::vector<DomainRobotFleetNavigationIDL::CommPath>::const_iterator data_pathIt;
	for(data_pathIt=data.path.begin(); data_pathIt!=data.path.end(); data_pathIt++) {
		good_bit = good_bit && cdr << *data_pathIt;
	}
	
	return good_bit;
}

// de-serialization operator for element CommNavPath
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, DomainRobotFleetNavigationIDL::CommNavPath &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize list-type element path
	ACE_CDR::ULong data_pathNbr;
	good_bit = good_bit && cdr >> data_pathNbr;
	data.path.clear();
	DomainRobotFleetNavigationIDL::CommPath data_pathItem;
	for(ACE_CDR::ULong i=0; i<data_pathNbr; ++i) {
		good_bit = good_bit && cdr >> data_pathItem;
		data.path.push_back(data_pathItem);
	}
	
	return good_bit;
}

// serialization operator for CommunicationObject CommNavPath
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const DomainRobotFleetNavigation::CommNavPath &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommNavPath
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, DomainRobotFleetNavigation::CommNavPath &obj)
{
	return cdr >> obj.set();
}
