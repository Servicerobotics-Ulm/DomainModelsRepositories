//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef DOMAINROBOTFLEETNAVIGATION_COMMNODE_H_
#define DOMAINROBOTFLEETNAVIGATION_COMMNODE_H_

#include "DomainRobotFleetNavigation/CommNodeCore.hh"

namespace DomainRobotFleetNavigation {
		
class CommNode : public CommNodeCore {
	public:
		// default constructors
		CommNode();
		
		/**
		 * Constructor to set all values.
		 * NOTE that you have to keep this constructor consistent with the model!
		 * Use  at your own choice.
		 *
		 * The preferred way to set values for initialization is:
		 *      CommRepository::MyCommObject obj;
		 *      obj.setX(1).setY(2).setZ(3)...;
		 */
		// CommNode(const int &id, const double &x, const double &y, const bool &reserved);
		
		CommNode(const CommNodeCore &commNode);
		CommNode(const DATATYPE &commNode);
		virtual ~CommNode();
		
		// use framework specific getter and setter methods from core (base) class
		using CommNodeCore::get;
		using CommNodeCore::set;
		
		//
		// feel free to add customized methods here
		//
};

inline std::ostream &operator<<(std::ostream &os, const CommNode &co)
{
	co.to_ostream(os);
	return os;
}
	
} /* namespace DomainRobotFleetNavigation */
#endif /* DOMAINROBOTFLEETNAVIGATION_COMMNODE_H_ */
