# baseURI: http://www.servicerobotik-ulm.de/DomainModels/DomainPrint
# imports: http://robmosys.eu/rdf/composition-structures
# imports: http://seronet-projekt.de/models/t2#Navigation

#######################################
# Technical Data Sheet
# for a SeRoNet DomainModels Repository as 
# exported by the SmartMDSD Toolchain
#
# <domainModelsName>/datasheet-gen/<domainModelsName>.ttl
#######################################

# all generated files use these prefixes
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix t1: <http://seronet-projekt.de/models/t1#> .
@prefix spdx: <http://spdx.org/rdf/terms#> .
@prefix spdx-lic: <http://spdx.org/licenses/> .

@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# TODO past “Durchstich”: exactly identify which elements belong to SeRoNet and which belong to RobMoSys
@prefix robmosys: <http://robmosys.eu/rdf/composition-structures#> .

# these namespaces can be different in generated files
@prefix : <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint#> .

##### Domain Model Repository
# ... they resemble eclipse projects in the tooling
# Note: this will later not be provided by the software component
<http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>
	a robmosys:DomainModelRepository;
	rdf:type owl:Ontology ;
	owl:imports <http://robmosys.eu/rdf/composition-structures> ;
.

##### Communication Objects
# see https://robmosys.eu/wiki/modeling:metamodels:commobject 
# Note: this will later not be provided by the software component
:CommDummy a robmosys:CommunicationObject;
	rdfs:label "CommDummy";
	t1:shortDescription "CommunicationObject CommDummy";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
.

:CommKeyValue a robmosys:CommunicationObject;
	rdfs:label "CommKeyValue";
	t1:shortDescription "CommunicationObject CommKeyValue";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
.

:CommPrintData a robmosys:CommunicationObject;
	rdfs:label "CommPrintData";
	t1:shortDescription "CommunicationObject CommPrintData";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
.

:CommPrintProcessData a robmosys:CommunicationObject;
	rdfs:label "CommPrintProcessData";
	t1:shortDescription "CommunicationObject CommPrintProcessData";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
.

:CommPrintRequest a robmosys:CommunicationObject;
	rdfs:label "CommPrintRequest";
	t1:shortDescription "CommunicationObject CommPrintRequest";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
.

:CommPrintResponse a robmosys:CommunicationObject;
	rdfs:label "CommPrintResponse";
	t1:shortDescription "CommunicationObject CommPrintResponse";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
.

:CommPrinterStatus a robmosys:CommunicationObject;
	rdfs:label "CommPrinterStatus";
	t1:shortDescription "CommunicationObject CommPrinterStatus";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
.


##### Service Definitions
# see https://robmosys.eu/wiki/modeling:metamodels:service 
# see https://robmosys.eu/wiki/modeling:metamodels:commpattern 
# Note: this will later not be provided by the software component
:PrintRequestProcessDataQueryService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "PrintRequestProcessDataQueryService";
	t1:shortDescription "ServiceDefinition PrintRequestProcessDataQueryService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
	t1:commPatternUsage [
		a robmosys:QueryPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:requestType :CommPrintProcessData;
		t1:answerType :CommPrintResponse;
	];
.

:PrintRequestQueryService a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "PrintRequestQueryService";
	t1:shortDescription "ServiceDefinition PrintRequestQueryService";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
	t1:commPatternUsage [
		a robmosys:QueryPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:requestType :CommPrintRequest;
		t1:answerType :CommPrintResponse;
	];
.

:PrintStatusEvent a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "PrintStatusEvent";
	t1:shortDescription "ServiceDefinition PrintStatusEvent";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
	t1:commPatternUsage [
		a robmosys:EventPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:eventType :CommPrinterStatus;
		t1:activationType :CommPrinterStatus;
		t1:eventStateType :CommPrinterStatus;
	];
.

:TriggerStart a robmosys:ServiceDefinition;
	rdf:type rdfs:Class;
	rdf:type sh:NodeShape;
	rdfs:subClassOf robmosys:AbstractService;
	rdfs:label "TriggerStart";
	t1:shortDescription "ServiceDefinition TriggerStart";
	t1:memberOfRepository <http://www.servicerobotik-ulm.de/DomainModels/DomainPrint>;
	t1:commPatternUsage [
		a robmosys:SendPattern;
		# FIXME: check the namespace: it will be wrong when elements from other repos are used.
		t1:dataType :CommVoid;
	];
.

